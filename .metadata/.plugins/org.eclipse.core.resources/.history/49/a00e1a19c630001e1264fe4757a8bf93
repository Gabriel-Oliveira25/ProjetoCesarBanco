package br.com.cesarschool.next.oo.negocio;

import br.com.cesarschool.next.oo.dao.DAOContaCorrente;
import br.com.cesarschool.next.oo.entidade.ContaCorrente;
import br.com.cesarschool.next.oo.entidade.ContaPoupanca;

public class MediatorContaCorrente {
	private DAOContaCorrente dao = new DAOContaCorrente();
	
	public MediatorContaCorrente() {
		
	}
	
	public String incluir(ContaCorrente conta) {
		if (conta.getNumeros() == null || conta.getNumeros().isBlank()) {
			return "Favor, incluir números da conta";
		} else if(conta.getNumeros().length() < 5) {
			return "Número de conta abaixo do permitido (5 caracteres)";
		} else if(conta.getNumeros().length() > 8) {
			return "Dígitos da conta acima do limite permitido (8 caracteres)";
		} else if(conta.getSaldo() < 0) {
			return "Não foi possível efetuar a ação, pois o saldo está negativado";
		} else if(conta.getNomeDoCorrentista() == null || conta.getNomeDoCorrentista().isBlank() || conta.getNomeDoCorrentista().length() > 60) {
			return "Nome inválido";
		} else {
			
			if (conta instanceof ContaPoupanca) {
				ContaPoupanca contaPoupanca = (ContaPoupanca)conta;
				if (contaPoupanca.getPercentualDeBonus() < 0) {
					boolean inclusao = dao.incluir(conta);
					if (!inclusao) {
						return "Conta poupança já existente";
					} else {
						return null;
					}
				}
			} else {
				boolean inclusao = dao.incluir(conta);
				if (!inclusao) {
					return "Conta poupança já existente";
				} else {
					return "";
				}
			}
		}
	}
}
